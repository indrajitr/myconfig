# System-wide .bashrc file for interactive bash(1) shells.
if [ -z "$PS1" ]; then
   return
fi

PS1='\h:\W \u\$ '
# Make bash check its window size after a process completes
shopt -s checkwinsize


# Custom Overrides
# #################
# TODO: Remove the unnecessary stuff from above at some point


# Standard Colors
# ###############
# See http://tldp.org/LDP/abs/html/colorizing.html
# See http://tldp.org/LDP/abs/html/sample-bashrc.html
fg_black1='\e[0;30m'    ; fg_black2='\e[1;30m'
fg_red1='\e[0;31m'      ; fg_red2='\e[1;31m'
fg_green1='\e[0;32m'    ; fg_green2='\e[1;32m'
fg_yellow1='\e[0;33m'   ; fg_yellow2='\e[1;33m'
fg_blue1='\e[0;34m'     ; fg_blue2='\e[1;34m'
fg_magenta1='\e[0;35m'  ; fg_magenta2='\e[1;35m'
fg_cyan1='\e[0;36m'     ; fg_cyan2='\e[1;36m'
fg_white1='\e[0;37m'    ; fg_white2='\e[1;37m'
fg_nocolor='\e[0m'


# Adjust Prompt to a more convenient form
#PS1="[\u@\h: \W]\\$ "
PS1="[\[${fg_green1}\]\u\[${fg_blue2}\]@\[${fg_blue1}\]\h:\[${fg_nocolor}\] \W]\\$ "


# Shell Options
# #############

# Use case-insensitive filename globbing
shopt -s nocaseglob

# When changing directory small typos can be ignored by bash
# for example, cd /vr/lgo/apaache would find /var/log/apache
shopt -s cdspell

# Causes the shell to attempt to save each line of a multi-line command 
# in the same history entry, adding  semicolons  where necessary  to 
# preserve syntactic correctness.
shopt -s cmdhist

# User is given the opportunity to re-edit a failed history substitution
shopt -s histreedit


# History Options
# ###############

# Don't put duplicate lines in the history.
export HISTCONTROL="ignoredups"

# Ignore some controlling instructions
export HISTIGNORE="[   ]*:&:bg:fg:exit:ls:ll:l"


# Completion options
# ##################

# If this shell is interactive, turn on programmable completion enhancements.
# Any completions you add in ~/.bash_completion are sourced last.
# The path assumes bash_completion installation from Homebrew.
case $- in
  *i*) [[ -f `brew --prefix`/etc/bash_completion ]] && source `brew --prefix`/etc/bash_completion ;;
esac


# Less Options
# ############

# less initialization script (sh)
# The path assumes lesspipe installation from Homebrew
[ -x `brew --prefix`/bin/lesspipe.sh ] && export LESSOPEN="|`brew --prefix`/bin/lesspipe.sh %s"

# Adjust the default less options.
# Note, git pager uses this variable to format the output properly.
# Git pager defaults to the LESS variable set to FRSX. For this behavior to be preserved,
# set core.pager to "less -+$LESS -FRSX"
export LESS="-i -z-4 -M"


# Functions
# #########

# Handy Extract Program
# See http://tldp.org/LDP/abs/html/sample-bashrc.html
function extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xvjf $1     ;;
      *.tar.gz)    tar xvzf $1     ;;
      *.bz2)       bunzip2 $1      ;;
      *.rar)       unrar x $1      ;;
      *.gz)        gunzip $1       ;;
      *.tar)       tar xvf $1      ;;
      *.tbz2)      tar xvjf $1     ;;
      *.tgz)       tar xvzf $1     ;;
      *.zip)       unzip $1        ;;
      *.Z)         uncompress $1   ;;
      *.7z)        7z x $1         ;;
      *)           echo "'$1' cannot be extracted via >extract<" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Function for quick handy calculations from cli
# See http://www.commandlinefu.com/commands/view/2520/define-a-quick-calculator-function
# See http://www.commandlinefu.com/commands/view/3871/command-line-calculator
function calc() {
  # echo "$*" | /usr/bin/bc -l
  awk "BEGIN{ print $* }"
}

# Function for quick handy debugging of http performace
# See http://forums.macosxhints.com/showpost.php?p=199191&postcount=7
debug_http() {
  /usr/bin/curl $@ -o /dev/null \
  -w "dns: %{time_namelookup} connect: %{time_connect} pretransfer: %{time_pretransfer} starttransfer: %{time_starttransfer} total: %{time_total}\n"
}

# Function to run upon exit of shell
function _exit() {
  echo -e "${fg_red1}Goodbye!${fg_nocolor}"
}
trap _exit EXIT
